name: CI Testing ensure_ssh_user and inital_VMs_setup roles only
'on':
  pull_request:
  push:
    branches:
      - fake
jobs:
  test:
    name: Molecule Test of ansible_init_cluster
    runs-on: macos-10.15
    strategy:
      matrix:
        include:
          - TESTBOX: generic/ubuntu2004
            skip_vagrant: false
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v2
#      - name: Enable vagrant box caching
#        uses: actions/cache@v2
#        if: ${{ ! matrix.skip_vagrant }}
#        with:
#          path: |
#            ~/.vagrant.d/boxes
#          key: ${{ runner.os }}-${{ hashFiles('ansible_init_cluster/ci_tools/Vagrantfile') }}
      - name: Set up Python 3.
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install test dependencies.
        run: pip3 install ansible molecule docker molecule-docker yamllint ansible-lint flake8 molecule-vagrant python-vagrant
      - name: Install vagrant parallels plugin
        run: vagrant plugin install vagrant-parallels
#      - name: Create test box
#        run: |
#          ./ansible_init_cluster/ci_tools/create_testbox.sh
#        if: ${{ ! matrix.skip_vagrant }}
      - name: Run Molecule Test on ensure_ssh_user.
        run: cd ansible_init_cluster/roles/ensure_ssh_user && molecule test
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          TESTBOX: generic/ubuntu2004
      - name: Run Molecule Test on initial_VMs_setup.
        run: cd ansible_init_cluster/roles/initial_VMs_setup && molecule test
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          TESTBOX: generic/ubuntu2004
      - name: Run Molecule Test on setup_cluster.
        run: cd ansible_init_cluster/roles/setup_cluster && molecule test
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          TESTBOX: generic/ubuntu2004
  check:
    needs:
      - test
    runs-on: ubuntu-latest
    steps:
      - name: Report success of the test matrix
        run: >-
          print("All's good")
        shell: python
